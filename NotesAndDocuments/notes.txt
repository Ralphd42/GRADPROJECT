http://www.righto.com/2014/02/bitcoin-mining-hard-way-algorithms.html

Most of the fields are used in the block header. The prevhash is the hash of the previous block. Apparently mixing big-ending and little-endian isn't confusing enough so this hash value also has every block of 4 bytes reversed. The version is the block protocol version. The nbits indicates the difficulty[3] of the block. The timestamp ntime is not necessarily accurate.

http://bfgminer.org/


todo
DOCUMENTATION

Backlog
Story
	Monitor tool
	a simple website
	db stuff
Enhancements
	1) get thread count from clients
	2) configuration settings
	3) Console UI
	4) enhnace screen on Android agent
	5) test feeder
	6) config for ports and IPS
	7) build clients
	
	
Controller
1) fix startup info.  Make as nice as possible as startup.  SHow IP and port that will be listening for workers

2)  
tcpClient.Connect(ipAddress, Settings.JOBPORT);

java.lang.IllegalStateException: Expected BEGIN_ARRAY but was STRING at line 1 column 34 path $.thData

-------------------------------------------------------------------------------------------------------------------
DeskClient
 
 
3) make good user interface from cmdline
X4) settings for both ports
X5) setting for clientName
X6) senf and store thread count
X7) show status

Controller
FIX UI	
1) allow more options build and test options
2) add test as options
3) ?manual kick off of components?
4) more options in settings file
5) document
5) ACTUALL CONNECT TO SLUSH POOL
6) SETTINGS FOR ABOVE MUST GO INTO PARAMS FILE
7) status thread for monitor

Monitor app
NUM available workers

Android app
1) multi threaded???
2) better UI
3) Test 


slushpool
stratum+tcp://us-east.stratum.slushpool.com:3333
ralphd42.workerName
anything123
--------------------------------------------------------------------------------------------------------------------
things to test
1)proper use of difficulty
	This difficulty that comes in on  mining.set_difficulty 
	stricly used in generating target
2) difficulty from mining.notify


3) feed a fake json in and have app run it
4) Handle clear.  Must close all items from queue and kill all jobs

0x00000000FFFF0000000000000000000000000000000000000000000000000000
5)    ---
User Interface
	1) kill
	2) show status
		Items in Queue
		Items processing
		Items Processes
		Ack Count
		curr difficulty
	3) test function
	4) Pause?
Number avail to run jobs
organize program
